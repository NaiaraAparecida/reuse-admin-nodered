[
    {
        "id": "tab_backoffice_v2_ux",
        "type": "tab",
        "label": "ReUse Backoffice v2 (UX)",
        "disabled": false,
        "info": ""
    },
    {
        "id": "tab_api_addons",
        "type": "tab",
        "label": "ReUse API ‚Äì Addons (CORS, filters, enforce max, WS)",
        "disabled": false,
        "info": "Complementos da API: CORS/OPTIONS, GET /api/items com filtros, POST /api/items com enforce maxImagesPerItem e auditoria com rota√ß√£o, e broadcast WS /ws/config."
    },
    {
        "id": "8f435366ba1f31cc",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "ReUse Theme",
                "default": "#4B7930",
                "baseColor": "#0baf6a",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#0baf6a",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0baf6a",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#f5f7f9",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#f5f7f9",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#0baf6a",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#f5f7f9",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#0baf6a",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "ReUse ‚Äì Admin Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 52,
                "sy": 52,
                "gx": 8,
                "gy": 8,
                "cx": 8,
                "cy": 8,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "ui_tab_adm",
        "type": "ui_tab",
        "z": "tab_backoffice_v2_ux",
        "name": "ReUse ‚Äì Admin",
        "icon": "settings",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "grp_params",
        "type": "ui_group",
        "z": "tab_backoffice_v2_ux",
        "name": "‚öôÔ∏è Par√¢metros",
        "tab": "ui_tab_adm",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "grp_actions",
        "type": "ui_group",
        "z": "tab_backoffice_v2_ux",
        "name": "üöÄ A√ß√µes",
        "tab": "ui_tab_adm",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "grp_status",
        "type": "ui_group",
        "z": "tab_backoffice_v2_ux",
        "name": "‚ÑπÔ∏è Status",
        "tab": "ui_tab_adm",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "grp_flags",
        "type": "ui_group",
        "z": "tab_backoffice_v2_ux",
        "name": "üß© Feature Flags",
        "tab": "ui_tab_adm",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "btn_load",
        "type": "ui_button",
        "z": "tab_backoffice_v2_ux",
        "name": "",
        "group": "grp_actions",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Carregar",
        "tooltip": "Recarrega a config do servidor",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "fn_build_get"
            ]
        ]
    },
    {
        "id": "btn_save",
        "type": "ui_button",
        "z": "tab_backoffice_v2_ux",
        "name": "Salvar Configura√ß√£o",
        "group": "grp_actions",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Salvar",
        "tooltip": "Salva a configura√ß√£o",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "save",
        "payload": "",
        "payloadType": "str",
        "topic": "salvar",
        "topicType": "str",
        "x": 160,
        "y": 400,
        "wires": [
            [
                "chg_btn_saving",
                "fn_build_payload"
            ]
        ]
    },
    {
        "id": "chg_btn_saving",
        "type": "change",
        "z": "tab_backoffice_v2_ux",
        "name": "Label: Salvando‚Ä¶",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"label\":\"Salvando‚Ä¶\"}",
                "tot": "json"
            }
        ],
        "x": 430,
        "y": 420,
        "wires": [
            [
                "btn_save"
            ]
        ]
    },
    {
        "id": "chg_btn_back_ok",
        "type": "change",
        "z": "tab_backoffice_v2_ux",
        "name": "Label: Salvar (OK)",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"label\":\"Salvar\"}",
                "tot": "json"
            }
        ],
        "x": 1730,
        "y": 440,
        "wires": [
            [
                "btn_save"
            ]
        ]
    },
    {
        "id": "chg_btn_back_err",
        "type": "change",
        "z": "tab_backoffice_v2_ux",
        "name": "Label: Salvar (Erro)",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"label\":\"Salvar\"}",
                "tot": "json"
            }
        ],
        "x": 1730,
        "y": 360,
        "wires": [
            [
                "btn_save"
            ]
        ]
    },
    {
        "id": "ui_sw_trades",
        "type": "ui_switch",
        "z": "tab_backoffice_v2_ux",
        "name": "",
        "label": "Trocas",
        "group": "grp_flags",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "trocas",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "animate": true,
        "x": 1070,
        "y": 20,
        "wires": [
            [
                "fn_state"
            ]
        ]
    },
    {
        "id": "ui_sw_push",
        "type": "ui_switch",
        "z": "tab_backoffice_v2_ux",
        "name": "",
        "label": "Push",
        "group": "grp_flags",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "push",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "animate": true,
        "x": 1070,
        "y": 60,
        "wires": [
            [
                "fn_state"
            ]
        ]
    },
    {
        "id": "ui_sw_maint",
        "type": "ui_switch",
        "z": "tab_backoffice_v2_ux",
        "name": "",
        "label": "Manuten√ß√£o",
        "group": "grp_flags",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "manutencao",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "animate": true,
        "x": 1090,
        "y": 100,
        "wires": [
            [
                "fn_state"
            ]
        ]
    },
    {
        "id": "ui_num_maximg",
        "type": "ui_numeric",
        "z": "tab_backoffice_v2_ux",
        "name": "",
        "label": "M√°x imagens",
        "tooltip": "Mensagem exibida no app/site",
        "group": "grp_params",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "topic": "maximgs",
        "format": "{{value}}",
        "min": 1,
        "max": 10,
        "step": 1,
        "x": 1090,
        "y": 140,
        "wires": [
            [
                "fn_state"
            ]
        ]
    },
    {
        "id": "ui_txt_banner",
        "type": "ui_text_input",
        "z": "tab_backoffice_v2_ux",
        "name": "",
        "label": "Banner (ex.: ‚ÄúPromo√ß√£o da semana‚Ä¶‚Äù)",
        "tooltip": "Mensagem exibida no app/site",
        "group": "grp_params",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "delay": "",
        "topic": "banner",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1180,
        "y": 180,
        "wires": [
            [
                "fn_state"
            ]
        ]
    },
    {
        "id": "ui_txt_status",
        "type": "ui_text",
        "z": "tab_backoffice_v2_ux",
        "group": "grp_status",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "ui_toast",
        "type": "ui_toast",
        "z": "tab_backoffice_v2_ux",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "Toast",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "fn_build_get",
        "type": "function",
        "z": "tab_backoffice_v2_ux",
        "name": "Build URL (GET)",
        "func": "const base = env.get('REUSE_API_BASE_URL') || 'http://localhost:1880';\nmsg.url = base.replace(/\\/$/,'') + '/api/config';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "http_get_cfg"
            ]
        ]
    },
    {
        "id": "http_get_cfg",
        "type": "http request",
        "z": "tab_backoffice_v2_ux",
        "name": "GET /api/config",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "persist": false,
        "authType": "",
        "x": 600,
        "y": 120,
        "wires": [
            [
                "fn_populate"
            ]
        ]
    },
    {
        "id": "fn_populate",
        "type": "function",
        "z": "tab_backoffice_v2_ux",
        "name": "Popular UI + Status ‚úÖ",
        "func": "const cfg = msg.payload || {};\nfunction out(topic, v){ return {topic, payload:v}; }\nconst now = new Date();\nconst hh = String(now.getHours()).padStart(2,'0');\nconst mm = String(now.getMinutes()).padStart(2,'0');\nnode.send([ out('trocas', !!cfg.enableTrades), out('push', !!cfg.enablePushNotifications), out('manutencao', !!cfg.maintenanceMode), out('maximgs', Number(cfg.maxImagesPerItem || 5)), out('banner', String(cfg.bannerText || '')) ]);\nreturn { payload: `‚úÖ Config carregada (${hh}:${mm})` };",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 160,
        "wires": [
            [
                "ui_txt_status"
            ]
        ]
    },
    {
        "id": "sw_router",
        "type": "switch",
        "z": "tab_backoffice_v2_ux",
        "name": "Roteia (topic)",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "trocas",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "push",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "manutencao",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "maximgs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "banner",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 770,
        "y": 40,
        "wires": [
            [
                "ui_sw_trades"
            ],
            [
                "ui_sw_push"
            ],
            [
                "ui_sw_maint"
            ],
            [
                "ui_num_maximg"
            ],
            [
                "ui_txt_banner"
            ]
        ]
    },
    {
        "id": "fn_state",
        "type": "function",
        "z": "tab_backoffice_v2_ux",
        "name": "Atualizar estado local (clamp)",
        "func": "const st = flow.get('cfg') || {};\nswitch (msg.topic) {\n  case 'trocas': st.enableTrades = !!msg.payload; break;\n  case 'push': st.enablePushNotifications = !!msg.payload; break;\n  case 'manutencao': st.maintenanceMode = !!msg.payload; break;\n  case 'maximgs': { let n = parseInt(msg.payload, 10); if (isNaN(n)) n = 5; if (n < 1) n = 1; if (n > 10) n = 10; st.maxImagesPerItem = n; break; }\n  case 'banner': st.bannerText = String(msg.payload || ''); break;\n}\nflow.set('cfg', st);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1630,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "fn_build_payload",
        "type": "function",
        "z": "tab_backoffice_v2_ux",
        "name": "Montar payload & headers",
        "func": "const cfg = flow.get('cfg') || {};\nmsg.headers = msg.headers || {};\nmsg.headers['Content-Type'] = 'application/json';\nconst token = env.get('REUSE_ADMIN_TOKEN');\nif (token) msg.headers['Authorization'] = 'Bearer ' + token;\nmsg.payload = cfg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 380,
        "wires": [
            [
                "fn_build_put"
            ]
        ]
    },
    {
        "id": "fn_build_put",
        "type": "function",
        "z": "tab_backoffice_v2_ux",
        "name": "Build URL (PUT)",
        "func": "const base = env.get('REUSE_API_BASE_URL') || 'http://localhost:1880';\nmsg.url = base.replace(/\\/$/,'') + '/api/config';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 380,
        "wires": [
            [
                "http_put_cfg"
            ]
        ]
    },
    {
        "id": "http_put_cfg",
        "type": "http request",
        "z": "tab_backoffice_v2_ux",
        "name": "PUT /api/config",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "persist": false,
        "authType": "",
        "x": 1060,
        "y": 380,
        "wires": [
            [
                "fn_after_put"
            ]
        ]
    },
    {
        "id": "fn_after_put",
        "type": "function",
        "z": "tab_backoffice_v2_ux",
        "name": "Refresh ap√≥s salvar + Status",
        "func": "const ok = msg.statusCode && msg.statusCode >= 200 && msg.statusCode < 300;\nif (ok) {\n  node.send([ {ui_control:{label:'Salvar'}}, {payload:'‚úÖ Salvo'} ]);\n  return [ null, null ];\n} else {\n  node.send([ {ui_control:{label:'Salvar'}}, {payload:'‚ö†Ô∏è Erro ao salvar'} ]);\n  return [ null, null ];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 1200,
        "y": 280,
        "wires": [
            [
                "chg_btn_back_ok",
                "fn_build_get"
            ],
            [
                "chg_btn_back_err",
                "ui_toast",
                "ui_txt_status"
            ]
        ]
    },
    {
        "id": "inj_load_onstart",
        "type": "inject",
        "z": "tab_backoffice_v2_ux",
        "name": "Carregar ao iniciar",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "fn_build_get",
                "sw_router"
            ]
        ]
    },
    {
        "id": "ws_in_cfg",
        "type": "websocket in",
        "z": "tab_backoffice_v2_ux",
        "name": "WS /ws/config",
        "server": "",
        "client": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "fn_ws_toast"
            ]
        ]
    },
    {
        "id": "fn_ws_toast",
        "type": "function",
        "z": "tab_backoffice_v2_ux",
        "name": "Toast on WS",
        "func": "try{\n  const m = typeof msg.payload==='string' ? JSON.parse(msg.payload) : msg.payload;\n  if (m && m.type==='config-updated'){\n    return { payload: 'Config atualizada externamente' };\n  }\n}catch(e){}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "ui_toast"
            ]
        ]
    },
    {
        "id": "inj_audit_refresh",
        "type": "inject",
        "z": "tab_backoffice_v2_ux",
        "name": "Atualizar auditoria (30s)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "fn_tail_audit"
            ]
        ]
    },
    {
        "id": "btn_audit_refresh",
        "type": "ui_button",
        "z": "tab_backoffice_v2_ux",
        "name": "Recarregar Log",
        "group": "grp_status",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Atualizar auditoria",
        "tooltip": "Recarrega as √∫ltimas altera√ß√µes",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "fn_tail_audit"
            ]
        ]
    },
    {
        "id": "fn_tail_audit",
        "type": "function",
        "z": "tab_backoffice_v2_ux",
        "name": "Tail audit (5 linhas)",
        "func": "const fs = require('fs');\nconst p = 'data/reuse_audit.jsonl';\nlet html = '<div style=\"font-family:monospace;line-height:1.2\">';\ntry {\n  const raw = fs.readFileSync(p,'utf-8');\n  const lines = raw.trim().split(/\\r?\\n/).filter(Boolean);\n  const last = lines.slice(-5).map(l => { try{return JSON.parse(l);}catch{return {raw:l}} });\n  last.reverse().forEach(e => {\n    if (e.raw) html += `<div>‚Ä¢ ${e.raw}</div>`;\n    else html += `<div>‚Ä¢ ${new Date(e.ts).toLocaleTimeString()} ‚Äî <b>${e.action||'event'}</b> (item:${e.itemId||'-'})</div>`;\n  });\n} catch(e) {\n  html += '<i>Sem auditorias ainda.</i>';\n}\nhtml += '</div>';\nreturn { payload: html };",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 600,
        "wires": [
            [
                "ui_tpl_audit"
            ]
        ]
    },
    {
        "id": "ui_tpl_audit",
        "type": "ui_template",
        "z": "tab_backoffice_v2_ux",
        "group": "grp_status",
        "name": "√öltimas auditorias",
        "order": 3,
        "width": 12,
        "height": 4,
        "format": "<md-card><md-card-title>√öltimas auditorias</md-card-title><div ng-bind-html=\"msg.payload\"></div></md-card>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 790,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "in_options_api_any",
        "type": "http in",
        "z": "tab_api_addons",
        "name": "OPTIONS /api/*",
        "url": "/api/*",
        "method": "options",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "fn_set_cors"
            ]
        ]
    },
    {
        "id": "fn_set_cors",
        "type": "function",
        "z": "tab_api_addons",
        "name": "Set CORS (204)",
        "func": "msg.headers = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS'\n};\nmsg.statusCode = 204;\nmsg.payload = '';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 80,
        "wires": [
            [
                "res_options_api_any"
            ]
        ]
    },
    {
        "id": "res_options_api_any",
        "type": "http response",
        "z": "tab_api_addons",
        "name": "204",
        "statusCode": "",
        "headers": {},
        "x": 560,
        "y": 80,
        "wires": []
    },
    {
        "id": "in_get_items",
        "type": "http in",
        "z": "tab_api_addons",
        "name": "GET /api/items (filtered)",
        "url": "/api/items",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "fn_get_items_filtered"
            ]
        ]
    },
    {
        "id": "fn_get_items_filtered",
        "type": "function",
        "z": "tab_api_addons",
        "name": "Ler arquivo + filtros + CORS",
        "func": "const fs = require('fs');\nconst itemsPath = 'data/reuse_items.json';\nlet arr = [];\ntry { arr = JSON.parse(fs.readFileSync(itemsPath,'utf-8') || '[]'); } catch(e) { arr = []; }\nconst q = (msg.req?.query?.q || '').toLowerCase();\nconst cond = msg.req?.query?.condition;\nconst offer = msg.req?.query?.offerType;\nlet r = arr.filter(it => !it.archived);\nif (q) r = r.filter(i => ((i.name||'')+' '+(i.description||'')).toLowerCase().includes(q));\nif (cond) r = r.filter(i => i.condition === cond);\nif (offer) r = r.filter(i => i.offerType === offer);\nmsg.headers = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS'\n};\nmsg.statusCode = 200;\nmsg.payload = r;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "res_get_items"
            ]
        ]
    },
    {
        "id": "res_get_items",
        "type": "http response",
        "z": "tab_api_addons",
        "name": "200 + CORS",
        "statusCode": "",
        "headers": {},
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "in_post_item",
        "type": "http in",
        "z": "tab_api_addons",
        "name": "POST /api/items (enforce max + audit)",
        "url": "/api/items",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "fn_post_item_enforce_max"
            ]
        ]
    },
    {
        "id": "fn_post_item_enforce_max",
        "type": "function",
        "z": "tab_api_addons",
        "name": "Validar + Enforce max + Persistir + Audit",
        "func": "const fs = require('fs');\nconst itemsPath = 'data/reuse_items.json';\nconst cfgPath = 'data/reuse_config.json';\nconst auditPath = 'data/reuse_audit.jsonl';\nlet cfg = {};\ntry { cfg = JSON.parse(fs.readFileSync(cfgPath,'utf-8')||'{}'); } catch(e) {}\nconst max = Math.max(1, Math.min(10, Number(cfg.maxImagesPerItem || 5)));\nlet items=[];\ntry { items = JSON.parse(fs.readFileSync(itemsPath,'utf-8')||'[]'); } catch(e) {}\nconst b = msg.payload || {};\nconst errors=[];\nif(!b.name||String(b.name).trim().length<2)errors.push('name');\nif(!b.description||String(b.description).trim().length<5)errors.push('description');\nif(!Array.isArray(b.images)||b.images.length<1)errors.push('images[]');\nelse if(b.images.length>max){b.images=b.images.slice(0,max);}\nif(!['novo','usado','reparo'].includes(b.condition))errors.push('condition');\nif(!['troca','doacao'].includes(b.offerType))errors.push('offerType');\nif(errors.length){msg.headers={'Access-Control-Allow-Origin':'*','Access-Control-Allow-Headers':'Content-Type, Authorization','Access-Control-Allow-Methods':'GET,POST,PUT,PATCH,DELETE,OPTIONS'};msg.statusCode=400;msg.payload={ok:false,errors};return msg;}\nconst id=(b.id&&String(b.id))||(Date.now().toString(36)+Math.random().toString(36).slice(2,7));\nconst now=new Date().toISOString();\nconst item={id,name:String(b.name),description:String(b.description),images:Array.isArray(b.images)?b.images:[],condition:b.condition,offerType:b.offerType,ownerId:String(b.ownerId||'anon'),city:b.city??null,archived:!!b.archived,reported:!!b.reported,createdAt:b.createdAt||now};\nitems.push(item);\nfs.writeFileSync(itemsPath,JSON.stringify(items,null,2));\ntry{const stat=fs.statSync(auditPath);if(stat.size>2*1024*1024){fs.renameSync(auditPath,`data/reuse_audit_${Date.now()}.jsonl`);}}catch(e){}\nconst entry={ts:Date.now(),action:'post_item',ip:(msg.req&&msg.req.ip)||null,itemId:id,maxImagesApplied:max};\nfs.appendFileSync(auditPath,JSON.stringify(entry)+'\\n');\nmsg.headers={'Access-Control-Allow-Origin':'*','Access-Control-Allow-Headers':'Content-Type, Authorization','Access-Control-Allow-Methods':'GET,POST,PUT,PATCH,DELETE,OPTIONS'};\nmsg.statusCode=201;\nmsg.payload={ok:true,item};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 240,
        "wires": [
            [
                "res_post_item"
            ]
        ]
    },
    {
        "id": "res_post_item",
        "type": "http response",
        "z": "tab_api_addons",
        "name": "201 + CORS",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 240,
        "wires": []
    },
    {
        "id": "link_in_ws_broadcast",
        "type": "link in",
        "z": "tab_api_addons",
        "name": "WS broadcast IN (from PUT /api/config)",
        "links": [],
        "x": 220,
        "y": 340,
        "wires": [
            [
                "fn_prepare_ws_msg"
            ]
        ]
    },
    {
        "id": "fn_prepare_ws_msg",
        "type": "function",
        "z": "tab_api_addons",
        "name": "Encapsular msg para WS",
        "func": "let payload;\nif (msg.broadcast) payload = msg.broadcast;\nelse if (msg.configUpdated) payload = {type:'config-updated',config:msg.configUpdated,ts:Date.now()};\nelse payload = {type:'config-updated',ts:Date.now()};\nmsg.payload = JSON.stringify(payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 340,
        "wires": [
            [
                "ws_out_config"
            ]
        ]
    },
    {
        "id": "ws_out_config",
        "type": "websocket out",
        "z": "tab_api_addons",
        "name": "WS /ws/config",
        "server": "",
        "client": "",
        "x": 730,
        "y": 340,
        "wires": []
    }
]